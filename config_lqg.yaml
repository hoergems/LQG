# Verbose output
verbose: True

# Number of paths which have to be generated by RRT to evaluate
num_generated_paths: 10

# For the simplest toy problem. Use a linear path between the start and goal state
use_linear_path: False

# Number of simulation runs for the best found path
num_simulation_runs: 3

# Dimension of the workspace (2 = 2D, 3 = 3D)
workspace_dimension: 2

# Maximum angular velocity of the joints (in rad/sec)
max_velocity: 2.0

# The joint control rate
control_rate: 30.0

# The initial joint angles (has to be consistent with the number of links)
init_joint_angles: [0.0, 0.0, 0.0]

# The goal position of the end effector. If set to None, a random goal position will be generated
goal_position: [-0.1, 2.5, 0.0]

# The radius around the goal position to define the end effector's goal area
goal_radius: 0.2

#Number of bins for the histograms
num_bins: 201

# The minimum joint state covariance
min_covariance: 0.0

# The maximum joint state covariance
max_covariance: 0.02

# The number of covariance steps
covariance_steps: 2

# The observation covariance
observation_covariance: 0.0001

use_paths_from_file: False

overwrite_paths_file: True

# Path evaluation weights
# Weight for the collision probability
w1: 1.0

# Weight for the end effector covariance trace
w2: 0.0

# Reward params
discount_factor: 1.0

# Penalty for crashing into an obstacle
illegal_move_penalty: 100.0

# Penalty for taking a step
step_penalty: 1.0

# Reward for reaching a terminal state
exit_reward: 1000.0

# The number of samples drawn from the distribution at each state to check a path for collision
sample_size: 500

joint_constraints: [-2.14159, 3.14159]

stop_when_terminal: True

# Plot the paths generated by RRTConnect (should be 'False' for a large number of paths)
plot_paths: True



